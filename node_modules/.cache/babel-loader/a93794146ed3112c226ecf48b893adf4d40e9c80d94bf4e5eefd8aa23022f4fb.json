{"ast":null,"code":"var _jsxFileName = \"/Users/engjellsela/Documents/mytips/src/components/NewJob.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport Navbar from \"./navbar\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewJob() {\n  _s();\n  const [name, setName] = useState('');\n  const [hourlyRate, setHourlyRate] = useState(0);\n  const {\n    userId\n  } = useAuth();\n  const insertJob = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('job').insert({\n      name: name,\n      hourlyRate: hourlyRate,\n      userFK: userId\n    });\n    if (error) console.log(error);else console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-4 my-4 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"h4\",\n          children: \"New job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"h6\",\n          children: \"Job name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Name\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"h6\",\n          children: \"Hourly rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          placeholder: \"Hourly rate\",\n          onChange: e => setHourlyRate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-success\",\n        onClick: insertJob,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(NewJob, \"r2aJ1PnJjODWc3N1pGV7VJeSs6s=\", false, function () {\n  return [useAuth];\n});\n_c = NewJob;\nvar _c;\n$RefreshReg$(_c, \"NewJob\");","map":{"version":3,"names":["useState","supabase","Navbar","useAuth","jsxDEV","_jsxDEV","NewJob","_s","name","setName","hourlyRate","setHourlyRate","userId","insertJob","data","error","from","insert","userFK","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","target","value","class","onClick","_c","$RefreshReg$"],"sources":["/Users/engjellsela/Documents/mytips/src/components/NewJob.js"],"sourcesContent":["import { useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport Navbar from \"./navbar\";\nimport { useAuth } from \"../context/AuthContext\";\n\nexport default function NewJob() {\n    const [name, setName] = useState('');\n    const [hourlyRate, setHourlyRate] = useState(0);\n    const { userId } = useAuth();\n\n    const insertJob = async () => {\n        const { data, error } = await supabase\n        .from('job')\n        .insert({ name: name, hourlyRate: hourlyRate, userFK: userId })\n        if (error) console.log(error)\n        else console.log(data)\n    };\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"container p-4 my-4 border\">\n                <div className=\"border-bottom\">\n                    <h2 className=\"h4\">New job</h2>\n                </div>\n\n                <div className=\"my-3\">\n                    <span className=\"h6\">Job name</span>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" onChange={(e) => setName(e.target.value)} />\n                </div>\n\n\n                <div className=\"my-3\">\n                    <span className=\"h6\">Hourly rate</span>\n                    <input type=\"number\" className=\"form-control\" placeholder=\"Hourly rate\" onChange={(e) => setHourlyRate(e.target.value)} />\n                </div>\n\n                <button type=\"button\" class=\"btn btn-success\" onClick={insertJob}>Submit</button>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}