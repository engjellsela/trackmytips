{"ast":null,"code":"var _jsxFileName = \"/Users/engjellsela/Documents/mytips/src/components/NewJob.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewJob({\n  userID\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [hourlyRate, setHourlyRate] = useState(0);\n  const insertJob = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('job').insert({\n      name: name,\n      hourlyRate: hourlyRate,\n      userFK: userID\n    });\n    if (error) console.log(error);else console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Job Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Hourly rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setHourlyRate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: insertJob,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(NewJob, \"Kt5Z81NeswUoALMn/y6ZapVMPU8=\");\n_c = NewJob;\nvar _c;\n$RefreshReg$(_c, \"NewJob\");","map":{"version":3,"names":["useState","supabase","jsxDEV","_jsxDEV","NewJob","userID","_s","name","setName","hourlyRate","setHourlyRate","insertJob","data","error","from","insert","userFK","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/engjellsela/Documents/mytips/src/components/NewJob.js"],"sourcesContent":["import { useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\n\nexport default function NewJob({ userID }) {\n    const [name, setName] = useState('');\n    const [hourlyRate, setHourlyRate] = useState(0);\n\n    const insertJob = async () => {\n        const { data, error } = await supabase\n        .from('job')\n        .insert({ name: name, hourlyRate: hourlyRate, userFK: userID })\n        if (error) console.log(error)\n        else console.log(data)\n    };\n\n    return (\n        <div>\n            <h2>New job</h2>\n            <div>\n                <label>Job Name</label>\n                <input type=\"name\" onChange={(e) => setName(e.target.value)} />\n            </div>\n\n            <br />\n\n            <div>\n                <label>Hourly rate</label>\n                <input type=\"number\" onChange={(e) => setHourlyRate(e.target.value)} />\n            </div>\n\n            <br />\n\n            <button onClick={insertJob}>Submit</button>\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMZ,QAAQ,CACrCa,IAAI,CAAC,KAAK,CAAC,CACXC,MAAM,CAAC;MAAER,IAAI,EAAEA,IAAI;MAAEE,UAAU,EAAEA,UAAU;MAAEO,MAAM,EAAEX;IAAO,CAAC,CAAC;IAC/D,IAAIQ,KAAK,EAAEI,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC,MACxBI,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIT,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBpB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBpB,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eAENpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENpB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BpB,OAAA;QAAOqB,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAGC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eAENpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENpB,OAAA;MAAQ0B,OAAO,EAAElB,SAAU;MAAAQ,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACjB,EAAA,CAhCuBF,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}